# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- none

variables:
  - group: node-demo-var-group

resources:
      containers:
      - container: mongodb
        image: mongo:3
        ports:
        - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: $(MONGO_INITDB_ROOT_USERNAME)
          MONGO_INITDB_ROOT_PASSWORD: $(MONGO_INITDB_ROOT_PASSWORD)

stages:
- stage: BUILD
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-16.04'

    services:
      mongodb: mongodb

    steps:
    - task: DownloadGitHubRelease@0
      inputs:
        connection: 'jasonelliott-wwt-pipeline'
        userRepository: 'jasonelliott-wwt/node-express-realworld-example-app'
        defaultVersionType: 'specificVersion'
        version: '27600493'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: YarnInstaller@3
      inputs:
        versionSpec: '1.x'

    - task: Yarn@3
      inputs:
        arguments: 'run start & sleep 5'

    - script: curl http://localhost:3000/api/tags
      displayName: Application Testing

    - task: Yarn@3
      env:
        NODE_ENV: $(NODE_ENV)
        MONGODB_URI: $(MONGODB_URI)

      inputs:
        arguments: 'run test'
        productionMode: true

    - script: ls -l
      displayName: Confirm Directory Contents
      condition: always()

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '*.xml'
        searchFolder: './results'
      condition: always()
